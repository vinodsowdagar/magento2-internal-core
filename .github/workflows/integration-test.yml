name: Integration Tests

# This makes sure that the tests are run on every push. See this page for more options:
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
on: push

jobs:
  build:
    strategy:
      # This Matrix will run the tests on PHP 7.3, and 7.4, and on Magento 2.3.7 and 2.4.2-p1.
      matrix:
        include:
          - PHP_VERSION: php73-fpm
            MAGENTO_VERSION: 2.3.7
          - PHP_VERSION: php74-fpm
            MAGENTO_VERSION: 2.4.2-p1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      # Download the correct Docker image with the correct Magento & PHP version for this specific run.
      - name: Start Docker
        run: docker run --detach --name magento-project-community-edition michielgerritsen/magento-project-community-edition:${{ matrix.PHP_VERSION }}-magento${{ matrix.MAGENTO_VERSION }}

      # If your code is not in the root but in a subdirectory you need to change this command.
      # Example: If your code is in the `src` folder then you need to do this:
      # run: docker cp $(pwd)/src magento-project-community-edition:/data/extensions/
      - name: Upload our code into the docker container
        run: docker cp $(pwd) magento-project-community-edition:/data/extensions/

      # Replace <VENDOR> and <MODULE> with the name in your `composer.json`.
      - name: Install the extension in Magento
        run: docker exec magento-project-community-edition composer require multisafepay/magento2-core

      # Only the tests in your repository will be run, the default Magento tests are not included in this.
      - name: Run tests
        run: docker exec magento-project-community-edition bash -c "php bin/magento deploy:mode:set developer && cd /data/dev/tests/integration/ && ../../../vendor/bin/phpunit"
